---
- name: Playbook to Update Cache, Upgrade Packages, and Reboot if Necessary
  hosts: all
  become: yes
  gather_facts: false

  tasks:
    - name: Update Package Cache
      block:
        - name: Update APT cache on Debian/Ubuntu
          apt:
            update_cache: yes
            force_apt_get: yes
            cache_valid_time: 3600
          when: ansible_distribution in ["Debian", "Ubuntu"]

        - name: Update DNF cache on Rocky Linux
          dnf:
            update_cache: yes
          when: ansible_distribution == "Rocky"

    - name: Upgrade All Packages
      block:
        - name: Upgrade packages on Debian/Ubuntu
          apt:
            upgrade: dist
            force_apt_get: yes
          when: ansible_distribution in ["Debian", "Ubuntu"]

        - name: Upgrade packages on Rocky Linux
          dnf:
            upgrade: yes
          when: ansible_distribution == "Rocky"

    - name: Check if Reboot is Needed
      block:
        - name: Check for /var/run/reboot-required (Debian/Ubuntu)
          stat:
            path: /var/run/reboot-required
          register: reboot_required_file_apt
          when: ansible_distribution in ["Debian", "Ubuntu"]

        - name: Check for kernel updates requiring reboot (Rocky Linux)
          shell: needs-restarting -r
          register: reboot_required_file_dnf
          changed_when: false  # `needs-restarting -r` returns non-zero if a reboot is needed
          when: ansible_distribution == "Rocky"

        - name: Set reboot requirement status
          set_fact:
            reboot_required: >-
              {{ (reboot_required_file_apt.stat.exists | default(false)) 
              or (reboot_required_file_dnf.rc != 0) | default(false) }}

    - name: Reboot the Server if Necessary
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required
